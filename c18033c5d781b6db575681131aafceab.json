{"posts": [{"title": "Hello World!", "date": "2019-12-18T16:50:00-00.00", "path": "/Blog-With-GitHub-Boilerplate/archives/typography/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/Blog-With-GitHub-Boilerplate/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/Blog-With-GitHub-Boilerplate/tag/Design/"}, {"name": "Typography", "slug": "Typography", "permalink": "/Blog-With-GitHub-Boilerplate/tag/Typography/"}]}, {"title": "\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u8f6c\u5316", "date": "2019-12-17T20:34:00-00.00", "path": "/Blog-With-GitHub-Boilerplate/archives/my-first-awesome-post/", "text": "2084Team\u7cfb\u5217\u6559\u7a0b :@(\u6df1\u601d) \u2014\u2014Yu\n\u4ec0\u4e48\u662f\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\n\u628a\u8fd0\u7b97\u7b26\u5199\u5728\u64cd\u4f5c\u6570\u4e4b\u524d\uff0c\u79f0\u4e3a\u6ce2\u5170\u8868\u8fbe\u5f0f(Polish Expression)\u6216\u524d\u7f00\u8868\u8fbe\u5f0f(Prefix Expression)\uff0c\u5982+AB\uff1b\u628a\u8fd0\u7b97\u7b26\u5199\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u79f0\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f(Reverse Polish Expression)\u6216\u540e\u7f00\u8868\u8fbe\u5f0f(Suffix Expression)\uff0c\u5982AB+\n\uff081\uff09\u4e00\u822c\u7b97\u672f\u8868\u8fbe\uff08\u4e2d\u7f00\u8868\u8fbe\uff09\uff0c\u5982#3(4+2)/2-5#\uff0c#\u4e3a\u8868\u8fbe\u5f0f\u754c\u5b9a\u7b26\uff0c\u9006\u6ce2\u5170\n\u8868\u8fbe\u5f0f\uff08\u540e\u7f00\u8868\u8fbe\u5f0f\uff09\uff0c\u5982\u524d\u8ff0\u8868\u8fbe\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\u4e3a\uff1a3 4 2 +  2 / 5 -\u3002\n\uff082\uff09\u8bbe\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7b26\u6709+\u3001-\u3001\u3001/\u3001#\u4e94\u79cd\uff0c\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u522b\u4ece\u9ad8\u5230\u4f4e\u4e3a()\u3001\u3001/\u3001+\u3001-\u3001#\uff1b\u6709\n\u62ec\u53f7\u5148\u7b97\u62ec\u53f7\u5185\uff0c\u518d\u7b97\u62ec\u53f7\u5916\u7684\uff0c\u591a\u5c42\u62ec\u53f7\u7531\u5185\u5411\u5916\u8fdb\u884c\u3002\n\uff083\uff09\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\u9700\u8981\u7528\u5230\u4e00\u4e2a\u4e34\u65f6\u6808 optr \u6682\u5b58\u8fd0\u7b97\u7b26\u3002\n\u5982\u4f55\u4eba\u5de5\u8f6c\u5316\u5c06\u4e00\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\n\u5047\u8bbe\u6709\u4e00\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0fa+bc-(d+e)\uff1a\n1.\u9996\u5148\u5c06\u8fd9\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684\u6240\u6709\u8fd0\u7b97\u52a0\u62ec\u53f7((a+(bc))-(d+e))\n2.\u7136\u540e\u5c06\u6240\u6709\u8fd0\u7b97\u7b26\u653e\u5230\u62ec\u53f7\u540e\u9762\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e86((a(bc) )+ (de)+ )-\n3.\u628a\u6240\u6709\u62ec\u53f7\u53bb\u6389abc+de+-\uff0c\u6700\u540e\u5f97\u51fa\u7684\u7ed3\u679c\u5c31\u662f\u540e\u7f00\u8868\u8fbe\u5f0f\u3002\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f :@(\u60f3\u4e00\u60f3) \n1.\u4e0d\u9700\u8981\u4e24\u6b21\u64cd\u4f5c\uff0c\u53ea\u8981\u4ece\u5934\u626b\u63cf\u5230\u5c3e\u5c31\u80fd\u6c42\u51fa\u7ed3\u679c\uff0c\u4e5f\u4e0d\u9700\u8981\u9012\u5f52\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u5f88\u5c0f\u7684\u6808\u5c31\u53ef\u4ee5\u3002\u6240\u4ee5\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7b97\u6cd5\u53d6\u5f97\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0a\u7684\u53cc\u91cd\u4f18\u52bf\u3002\n2.\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u6709\u8fd0\u7b97\u7b26\u5c31\u8fd0\u7b97\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519\uff1b\n3.\u6808\u53ef\u4ee5\u81ea\u52a8\u7684\u8bb0\u5f55\u4e2d\u95f4\u7ed3\u679c\uff1b\n4.\u673a\u5668\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u6570\u5806\u6808\uff0c\u6808\u4e2d\u53ea\u6709\u64cd\u4f5c\u6570\u548c\u7ed3\u679c\n5.\u524d\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u673a\u5904\u7406\uff0c\u5b83\u7684\u8fd0\u7b97\u7b26\u662f\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u51fa\u73b0\uff0c\u6240\u4ee5\u6c42\u503c\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u9700\u8981\u4f7f\u7528\u62ec\u53f7\u6765\u6307\u5b9a\u8fd0\u7b97\u987a\u5e8f\uff0c\u4e5f\u4e0d\u9700\u8981\u8003\u8651\u8fd0\u7b97\u7b26\u53f7\uff08\u6bd4\u5982\u52a0\u51cf\u4e58\u9664\uff09\u7684\u4f18\u5148\u7ea7\u3002\n\uff08\u65e0\u89c6\u62ec\u53f7\u548c\u4f18\u5148\u7ea7\uff01\uff01 :@(\u6124\u6012) \uff09\n    OpendType EvaluateExpression( )\n    {\n        InitStack( OPTR );\n        Push( OPTR, \u2018#\u2019 );\n        InitStack( OPND );\n        c = getchar( );\n        while( !(c == \u2018#\u2019 &amp;&amp; GetTop( OPTR ) == \u2018#\u2019) )\n        {\n            if( ! In( c, OP ))  // c \u662f\u8fd0\u7b97\u7b26\uff1f,OP\u662f\u8fd0\u7b97\u7b26\u96c6\u5408\n            {\n                Push( OPND, c);\n                c = getchar( );\n            }\n    else\n            {\n                switch( Precede ( GetTop( OPTR), c ))\n                {\n                    case \u2018&lt;\u2019 :     //\u6808\u9876\u5143\u7d20\u4f18\u5148\u6743\u4f4e\n                        Push( OPTR, c );\n                        c = getchar( );\n                        break;\n                    case \u2018=\u2018 :  // c\u4e3a\u2019)\u2019\n                        Pop( OPTR, x );\n                        c = getchar( );\n                        break;\n                        case \u2018&gt;\u2019:  //\u9000\u6808\u5e76\u5c06\u8fd0\u7b97\u7ed3\u679c\u5165\u6808\n                            Pop( OPTR, t );\n                            Pop( OPND, b );\n                            Pop( OPND, a );\n                            Push( OPND, Operate( a, t, b ));\n                            break;\n                     }// switch\n\n         }// while\n         return  GetTop( OPND );\n        }// EvaluateExpression\n                                 \u4e2d\u7f00\u8868\u8fbe\u5f0f\n\n\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5b9e\u73b0\u539f\u7406\n\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7b97\u6cd5\u89e3\u91ca\n\u4e2d\u7f00\u5f0f\u8f6c\u5316\u4e3a\u9006\u6ce2\u5170\u5f0f\u7b97\u6cd5\u5177\u4f53\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09\n\n  char *RPExpression(char *e)\n          /* \u8fd4\u56de\u8868\u8fbe\u5f0fe\u7684\u9006\u6ce2\u5170\u5f0f */\n  {\n      //\u6808OPTR\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7b26\uff0c\u6808RPE\u7528\u4e8e\u5b58\u653e\u9006\u6ce2\u5170\u5f0f\n      SqStack OPTR,RPE;\n      InitStack(OPTR);\n      InitStack(RPE);    \n\n      //\u5047\u8bbe\u5b57\u7b26'#'\u662f\u8fd0\u7b97\u7ea7\u522b\u6700\u4f4e\u7684\u8fd0\u7b97\u7b26\uff0c\u5e76\u538b\u5165\u6808OPTR\u4e2d\n     Push(OPTR,'#');\n\n     //p\u6307\u9488\u7528\u4e8e\u904d\u5386\u4f20\u5165\u7684\u5b57\u7b26\u4e32\uff0cch\u7528\u4e8e\u4e34\u65f6\u5b58\u653e\u5b57\u7b26,length\u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 \n     char *p=e,ch;\n     int length=0;\n     for(;*p!='\\0';p++)//\u9010\u4e2a\u5b57\u7b26\u8bbf\u95ee\n     {\n         switch(*p)\n         {\n             //\u9047'('\u5219\u76f4\u63a5\u5165\u6808OPTR\n             case '(':\n                 Push(OPTR,*p);\n                 break;\n             //\u9047')'\u5219\u5c06\u8ddd\u79bb\u6808OPTR\u6808\u9876\u7684\u6700\u8fd1\u7684'('\u4e4b\u95f4\u7684\u8fd0\u7b97\u7b26\uff0c\u9010\u4e2a\u51fa\u6808\uff0c\u4f9d\u6b21\u9001\u5165\u6808RPE,\u6b64\u65f6\u629b\u5f03'('\n             case ')':\n                 while(GetTop(OPTR)!='('||GetTop(ORTP)=='#')\n                 {\n                     Pop(OPTR,ch);\n                     Push(RPE,ch);\n                 }\n                 Pop(OPTR,ch);\n                 break;\n             //\u9047\u4e0b\u5217\u8fd0\u7b97\u7b26\uff0c\u5219\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n             //1.\u82e5\u5f53\u524d\u6808OPTR\u7684\u6808\u9876\u5143\u7d20\u662f'('\uff0c\u5219\u5f53\u524d\u8fd0\u7b97\u7b26\u76f4\u63a5\u538b\u5165\u6808OPTR\uff1b\n             //2.\u5426\u5219\uff0c\u5c06\u5f53\u524d\u8fd0\u7b97\u7b26\u4e0e\u6808OPTR\u7684\u6808\u9876\u5143\u7d20\u6bd4\u8f83\uff0c\u82e5\u4f18\u5148\u7ea7\u8f83\u6808\u9876\u5143\u7d20\u5927\uff0c\u5219\u76f4\u63a5\u538b\u5165\u6808OPTR\u4e2d,\n             //  \u5426\u5219\u5c06OPTR\u6808\u9876\u5143\u7d20\u5f39\u51fa\uff0c\u5e76\u538b\u5165\u6808RPE\u4e2d\uff0c\u76f4\u5230\u6808\u9876\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u522b\u4f4e\u4e8e\u5f53\u524d\u8fd0\u7b97\u7b26\uff0c\u7136\u540e\u518d\u5c06\u5f53\u524d\u8fd0\u7b97 \n     \u7b26\u538b\u5165\u6808OPTR\u4e2d\n             case '+':\n             case '-':\n                 for(ch=GetTop(OPTR);ch!='#';ch=GetTop(OPTR))\n                 {                \n                     if(ch=='(')\n                     {                        \n                         break;\n                     }\n                     else\n                     {\n                         Pop(OPTR,ch);\n                        Push(RPE,ch);                        \n                     }                                          \n                 }\n                 Push(RPE,*p);\n                 length++;\n                 break;\n             case '*':\n             case '/':\n                 for(ch=Top(OPTR);ch!='#'&amp;&amp;ch!='+'&amp;&amp;ch!='-';ch=Top(OPTR))\n                 {                \n                     if(ch=='(')\n                     {                        \n                         break;\n                     }\n                     else\n                     {\n                         Pop(OPTR,ch);\n                         Push(RPE,ch);\n                     }                                          \n                 }\n                 Push(OPTR,*p);\n                 length++;\n                 break;\n             //\u9047\u64cd\u4f5c\u6570\u5219\u76f4\u63a5\u538b\u5165\u6808RPE\u4e2d\n             default:\n                 Push(RPE,*p);   \n                 length++;             \n         }\n     }    \n     //\u82e5\u6808OPTR\u975e\u7a7a\uff0c\u5219\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u5f39\u51fa\u5e76\u538b\u5165\u6808RPE\u4e2d\n      while(!StackEmpty(OPTR)&amp;&amp;Top(OPTR)!='#')\n     {\n         Pop(OPTR,ch);\n         Push(RPE,ch);        \n     }\n     //\u6700\u540e\u5c06\u6808RPE\u8f93\u51fa\uff0c\u9006\u5e8f\u6392\u5217\u6210\u5b57\u7b26\u4e32;\n     char *result;\n     result=(char *)malloc(sizeof(char)*(length+1));\n     result+=length;\n     *result='\\0';\n     result--;\n     for(;!StackEmpty(RPE);result--)\n     {\n         Pop(RPE,ch);\n         *result=ch;        \n     }\n     ++result;\n     return result;\n }\n\n\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c\u7b97\u6cd5\u89e3\u91ca\n\u7ef4\u62a4\u4e00\u4e2a\u7ed3\u679c\u6808S3\uff0c\u8be5\u6808\u6700\u540e\u5b58\u653e\u7684\u662f\u8868\u8fbe\u5f0f\u7684\u503c\u3002\u4ece\u5de6\u81f3\u53f3\u7684\u904d\u5386\u6808S1\uff08\u76f4\u63a5\u4f7f\u7528\u4e0a\u7b97\u6cd5\u8fd4\u56de\u7684\u6307\u9488\uff0c\u672a\u72ec\u7acb\u5efa\u7acbs1\uff09\n\uff081\uff09\u5982\u679c\u9047\u5230\u7684\u662f\u6570\u5b57\uff0c\u76f4\u63a5\u5c06\u6570\u5b57\u538b\u5165\u5230S3\u4e2d\n\uff082\uff09\u5982\u679c\u9047\u5230\u7684\u662f\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u53d6S3\u6808\u9876\u7684\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u538b\u5165\u5230\u6808S3\u4e2d\n\uff083\uff09\u5982\u679c\u9047\u5230\u7684\u662f\u53cc\u76ee\u8fd0\u7b97\u7b26\uff0c\u53d6S3\u6808\u9876\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u9996\u5148\u51fa\u6808\u7684\u5728\u5de6\uff0c\u540e\u51fa\u6808\u7684\u5728\u53f3\u8fdb\u884c\u53cc\u76ee\u8fd0\u7b97\u7b26\u7684\u8ba1\u7b97\uff0c\u5c06\u7ed3\u679c\u538b\u5165\u5230S3\u4e2d\n\u904d\u5386\u5b8c\u6574\u4e2a\u6808S1\uff0c\u6700\u540eS3\u4e2d\u7684\u503c\u5c31\u662f\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u503c\u3002\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c\uff08\u672a\u5305\u62ec\u9519\u8bef\u68c0\u67e5\uff0c\u5728\u8f93\u5165\u6216\u8005\u8f6c\u5316\u6b63\u786e\u7684\u524d\u63d0\u4e0b\u6c42\u503c\uff09\n\nint RPECalculation(char *e)\n{\n\n    SqStack OPND;\n    InitStack(OPND);//\u5b58\u653e\u8ba1\u7b97\u5bf9\u8c61\u548c\u7ed3\u679c \n    char *p = e,ch,\n    int Operator,top1,top2,result;\n    for(;*p!='\\0';p++)\n    {\n        Operator = 0;\n        switch(*p)\n        {\n            case '+':\n                Operator = 1;\n                break;\n            case '-':\n                Operator = 2;\n                break;\n            case '*':\n                Operator = 3;\n                break;\n            case '/':\n                Operator = 4;\n                break;\n            default:\n                ch = *p;\n                Push(OPND,(int)ch);\n                break; \n        }\n        if(Operator==0);\n        else if(Operator==1||Operator==2||Operator==3||Operator==4)\n        {\n            Pop(OPND,top1);\n            if(GetTop(OPND))\n            {\n                Pop(OPND,top2);\n            }\n        switch(Operator)\n        {   \n\n            case 1:\n                result = top1 + top2;\n                break;\n            case 2:\n                result = top2 - top1;//\u5e94\u8be5\u9006\u8fc7\u6765\u51cf\u6cd5\u548c\u9664\u6cd5 \n                break;\n            case 3:\n                result = top1 * top2;\n                break;\n            case 4:\n                result = top2 / top1;\n                break:\n            default:\n                return ERROR; \n            }\n        Push(OPND,result);\n}\n} \n  return GetTop(OPND); \n}\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/Blog-With-GitHub-Boilerplate/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog-With-GitHub-Boilerplate/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Blog-With-GitHub-Boilerplate/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/Blog-With-GitHub-Boilerplate/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: hi#imalan.cn (replace # with @)\nTelegram\uff1aAlanDecode\n", "categories": [], "tags": []}]}